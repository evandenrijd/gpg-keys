* intro
  + on MacOS create an encrypted volume on dropbox ~/Dropbox/backup.dmg
    + opening it will create a /Volumes/backup disk
* set expire date and backup
  + checkout [[file:../../docs/orgs/gpg.org::#gpg_set_expire_date_batch][gpg.org: extend the expiry date in a batch way]]
    #+name: set the expire date in the future
    #+begin_src shell
      gpg2 --quick-set-expire 9DCA05AEE009D545D7CA4D8CC6E698176ED3973F 5y
      gpg2 --quick-set-expire 9DCA05AEE009D545D7CA4D8CC6E698176ED3973F 5y \*
      gpg2 --edit-key 9DCA05AEE009D545D7CA4D8CC6E698176ED3973F passwd #set pass gpg-keys/master-backup-dropbox
      GPG_ID=9DCA05AEE009D545D7CA4D8CC6E698176ED3973F make clean export
      cp gpg-* /Volumes/backup/gpg-keys
      gpg2 --edit-key 9DCA05AEE009D545D7CA4D8CC6E698176ED3973F passwd #set pass gpg-keys/master-current
      GPG_ID=9DCA05AEE009D545D7CA4D8CC6E698176ED3973F make clean export #export to other machines
    #+end_src
* move gpg-keys to another computer
  + make all will create the backup files and put a gpg-keys.tar.gz file that can be transferred
    to another machine. Be carefull to disposes of this tar.gz-file after being used with the
    target clean.
  #+name: first check gpg keys with
  #+begin_example
    $ gpg2 -K  # FAIR
    $ gpg2 -K --list-options show-only-fpr-mbox # BETTER: only show you the fingerprint you have the private key of.
    9DCA05AEE009D545D7CA4D8CC6E698176ED3973F evandenrijd@gmail.com
  #+end_example
  #+begin_example
    nyc: cd ~/vc/projects/gpg-keys && make export && scp gpg-* paris:~/transfer
    paris: gpg --import ./pgp-public-keys.asc
    paris: gpg --import ./pgp-private-keys.asc
    paris: gpg --import-ownertrust ./pgp-ownertrust.txt
    paris: gpg -K --with-keygrip  # notice the keygrip of the secret key
    paris: rm ~/.config/gnupg/private-keys-v1.d/<keygrip>.key
    paris: gpg -K      # check for "sec#" instead of "sec" only
  #+end_example
* add gpg in profile
  #+begin_example
    export GPG_TTY=$(tty)
    if ! pgrep -x "gpg-agent" > /dev/null; then
        /nix/store/z3vz9f953qqkmhjgjxalgp8c9fn3xcia-gnupg-2.2.13/bin/gpgconf --launch gpg-agent
    fi
    export SSH_AUTH_SOCK=$(/nix/store/z3vz9f953qqkmhjgjxalgp8c9fn3xcia-gnupg-2.2.13/bin/gpgconf --list-dirs agent-ssh-socket)
  #+end_example
